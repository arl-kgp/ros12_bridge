cmake_minimum_required(VERSION 3.5)

project({{package_name}})

# Default to C++14
if(NOT CMAKE_CXX_STANDARD)
  set(CMAKE_CXX_STANDARD 14)
endif()

if(CMAKE_COMPILER_IS_GNUCXX OR CMAKE_CXX_COMPILER_ID MATCHES "Clang")
  # we dont use add_compile_options with pedantic in message packages
  # because the Python C extensions dont comply with it
  set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -Wall -Wextra -Wpedantic")
endif()

find_package(ament_cmake REQUIRED)
find_package(builtin_interfaces REQUIRED)
find_package(std_msgs REQUIRED)
find_package(rosidl_default_generators REQUIRED)
{% for dep in depends -%}
find_package({{dep}} REQUIRED)
{% endfor %}

rosidl_generate_interfaces({{package_name}}
  {% for msg in messages -%}
  "msg/{{msg}}.msg"
  {% endfor -%}
  {% for srv in services -%}
  "srv/{{srv}}.srv"
  {% endfor -%}
  DEPENDENCIES builtin_interfaces std_msgs {{ ' '.join(depends)}}
)

install(
  FILES mapping_rules.yaml
  DESTINATION share/${PROJECT_NAME})
 
ament_package()
